package ru.test.info;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2014-12-15T16:28:22.192+04:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "WSInfo12Service",
                  wsdlLocation = "file:src/main/resources/wsdl/DCA/WSInfo12.wsdl",
                  targetNamespace = "http://WSInfo12.ws.test.ru")
public class WSInfo12Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WSInfo12.ws.test.ru", "WSInfo12Service");
    public final static QName WSInfo12Port = new QName("http://WSInfo12.ws.test.ru", "WSInfo12Port");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/wsdl/DCA/WSInfo12.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WSInfo12Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/wsdl/DCA/WSInfo12.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WSInfo12Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSInfo12Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSInfo12Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSInfo12Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSInfo12Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSInfo12Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns WSInfo12PortType
     */
    @WebEndpoint(name = "WSInfo12Port")
    public WSInfo12PortType getWSInfo12Port() {
        return super.getPort(WSInfo12Port, WSInfo12PortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSInfo12PortType
     */
    @WebEndpoint(name = "WSInfo12Port")
    public WSInfo12PortType getWSInfo12Port(WebServiceFeature... features) {
        return super.getPort(WSInfo12Port, WSInfo12PortType.class, features);
    }

}
